#!/usr/bin/env bash
set -e

source "$(dirname "$0")/ec2util"

function usage() {
  cat<<EOF
Usage: ec2list [-r REGION] [-t TAG] [TARGET]

List EC2 instances optionally matching [TARGET]

  -c             Force cache population
  -h             Display help
  -r REGION      EC2 Region, defaults to us-east-1
  -t TAG         Resolve instances with tag, defaults to Name

Examples:

  ec2list -r us-west-1 dev
     list ec2 instances in us-west-1 region matching dev

EOF
}


##########################################################
# Runtime variables
##########################################################
tag="Name"
target=""
filters=""

CMD=""

# parse options (and capture command for out of order)
while test $# != 0; do case "$1" in
  -c) CMD=$1;;
  -h) CMD=$1;;
  -l) CMD=$1;;
  -r) set_region $2; shift;;
  -t) tag=$2; shift;;
  -L)
    proxy=(${2//:/ });
      if [ ${#proxy[@]} != 3 ]; then
        >&2 echo "ERROR: proxy port format must be [port]:[host]:[hostport]"
        usage
        exit 1
      fi
      shift
      ;;
    -F) jump_port=$2; shift;;
    *)  target=$1
  esac
  shift
done

# target agnostic commands
case "${CMD}" in
  -c) populate_cache; exit;;
  -h) usage; exit;;
esac

init_cache

instance_cache | jq  -r ".Reservations[].Instances[]
| select((.Tags[]?|select(.Key==\"${tag}\")|.Value) | contains(\"${target}\"))
| [(.Tags[]?|select(.Key==\"Name\")|.Value), .PublicIpAddress // .PrivateIpAddress
  ,(
    .Tags? | map(
      select(.Key != \"Name\")
      | select(.Key | startswith(\"aws\") | not)
      | .Key + \":\" + .Value
      | gsub(\" \";\"\u00A0\")
      )
    | sort
    | join(\",\u00A0\")
    )
]
| @tsv" | column -t
