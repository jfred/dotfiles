@startuml class_diagram

class hotswitchHs {
    {static} +openOrClose()
    {static} +enableAutoUpdate()
    {static} +setAutoGeneratedKeys()
    {static} +enableAllSpaceWindows()
    {static} +enableDebug()
}

class MainController {
    +init()
    +openOrClose()
    +checkUpdate()
    +setAutoGeneratedKeys()
    +enableAllSpaceWindows()
}
class HotkeyController {
    +createHotkeys()
    +enableHotkeys()
    +disableHotkeys()
}
abstract Controller

class KeyStatusModel {
    +createKeyStatuses()
    +resetAutoGeneratedKeys()
    +setSpecifiedAutoGeneratedKeys()
}
class SettingModel {
    +get()
    +set()
    +clear()
}
class WindowModel {
    +getCachedOrderedWindowsOrFetch()
    +getCreatedOrderedWindows()
    +refreshOrderedWindows()
}
class AppWatchModel {
    +watchAppliationDeactivated()
    +unwatchAppliationDeactivated()
}
abstract Model

class PanelLayoutView {
    +show()
    +hide()
    +getSelectedRowPosition()
    +selectNextRow()
    +selectPreviousRow()
    +emphasisRow()
    +unumphasisRow()
}
class BaseCanvasView {
    +show()
    +hide()
}
class SelectedRowCanvasView {
    +show()
    +hide()
    +next()
    +previous()
}
class ToastView {
    +show()
    +hide()
    +toast()
}
abstract View {
    +show()
    +hide()
}

class Updater {
    {static} +check()
}

hotswitchHs --> MainController

MainController *-> HotkeyController

MainController --> PanelLayoutView
MainController --> KeyStatusModel
MainController --> SettingModel
MainController --> WindowModel
MainController --> AppWatchModel

HotkeyController --> PanelLayoutView
HotkeyController --> ToastView

KeyStatusModel <|.. Model
SettingModel <|.. Model
WindowModel <|.. Model
AppWatchModel <|.. Model

PanelLayoutView <|.. View
BaseCanvasView <|.. View
SelectedRowCanvasView <|.. View
ToastView <|.. View

MainController <|.. Controller
HotkeyController <|.. Controller

PanelLayoutView *-- BaseCanvasView 
PanelLayoutView *-- SelectedRowCanvasView 

MainController --> Updater

@endum