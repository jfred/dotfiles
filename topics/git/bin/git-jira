#!/usr/bin/env bash
set -e

# make sure jira command exists
command -v jira > /dev/null || ( echo "jira command unavailable. Install via \"npm install -g jira-cmd\"" && exit 1)

function print_help() {
    echo "usage: git jira [command]"
    echo ""
    echo "commands:"
    echo "   show     - show summary of current branch ticket"
    echo "   open     - open current branch ticket in browser"
    echo "   branches - list branches with jira summary (-r for remote)"
    echo ""
}

function ticket() {
    local branch=$1
    echo ${branch} | sed 's/.*\(hotfix\|task\|feature\|epic\|bug\)\/\([A-Z]*-[0-9]*\).*/\2/g'
}

function summary() {
    local ticket=$1
    jira show -o summary ${ticket}
}

function branch_list() {
    while read -r branch; do if [[ ${branch} =~ (hotfix|task|feature|bug|epic)/([A-Z]{1,}-[0-9]{1,}).* ]]; then
            echo -e "\033[0;33m${branch} \033[0;36m($(summary $(ticket "${branch}")))\033[0m" &
        fi
    done <<< $(git branch $1)
    wait
}

function current_branch() {
    git rev-parse --abbrev-ref HEAD
}

if [[ $# -eq 0 ]]; then
    print_help
elif [[ "$1" == "show" ]]; then
    jira show $(ticket $(current_branch))
elif [[ "$1" == "open" ]]; then
    jira open $(ticket $(current_branch))
elif [[ "$1" == "branches" ]]; then
    if [[ "$2" == "-r" ]]; then
        branch_list -r
    else
        branch_list -l
    fi
else
    print_help
    exit 1
fi
