#!/usr/bin/env bash
# Attempts to find branch by partial match
# If input is url attempt to match against last segment (e.g. ticket urls)
set -e

usage() {
    script=`basename "$0"`
    echo "Usage: ${script} PARTIAL_BRANCH"
}

# ensure we have a repi
if [[ "${1}" == "" ]]; then
    usage
    exit 1
fi
input=${1}

regex='(https?|ftp|file)://[-A-Za-z0-9\+&@#/%?=~_|!:,.;]*[-A-Za-z0-9\+&@#/%=~_|]'
# if URL grab last portion
if [[ $input =~ $regex ]]; then 
	input=${input%/} # remove trailing slash
    input=${input##*/} # use last segment
fi

# find matching branches
unset options i
while IFS= read -r -d $'\n' f; do
	options[i++]="$f"
done < <(git list-branch ${input})

if [[ ${#options[@]} == 0 ]]; then
	# If no matching branches error
	>&2 echo "Failed to find branch for input: ${input}"
	exit 2
elif [[ "${#options[@]}" -eq "1" ]]; then
	# if only one branch check it out
	branch=${options}
else
	# if more than one branch present select
	select opt in "${options[@]}"; do
		case $opt in
			*) 
				branch=${opt}
				break
		esac
	done
fi

git checkout ${branch}
