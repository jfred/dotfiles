#!/usr/bin/env bash
# Checkout and fetch to ensure repos are up to date
#
# Expects a repos file in the current directory with the form:
#  dir:cloneurl
#
# Example:
#  mycode:git@github.com:username/code.git
#  myothercode:https://github.com/username/othercode.git

# if no repo file, try directory above current git root
if [ ! -f "repos" ]; then
    cd $(git rev-parse --show-toplevel)/../
fi


if [ ! -f "repos" ]; then
    echo $0: no repo file found
    exit 1
fi

fetch=()

while read repo; do
    # skip empty lines
    if [[ -z "$repo" ]]; then
        continue
    fi

    dir=$( cut -d ':' -f 1 <<< "${repo}" )
    clone=$( cut -d ':' -f 2- <<< "${repo}" )
    if [ ! -d "${dir}" ]; then
        echo Cloning ${dir}...
        git clone ${clone} ${dir}
    else
        fetch[${#fetch[@]}]=${dir}
    fi
done < repos

if [[ ${#fetch[@]} -eq 0 ]]; then
    exit
fi

if parallel --version > /dev/null 2>&1; then
    parallel echo running: git -C {} fetch ::: ${fetch[@]}
    parallel --tag git -C {} fetch ::: ${fetch[@]}
else
    for dir in "${fetch[@]}"; do
        echo running: git -C ${dir} fetch
        git -C ${dir} fetch
    done
fi
