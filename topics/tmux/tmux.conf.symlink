# Use something easier to type as the prefix.
set -g prefix C-a
unbind C-b
bind C-a send-prefix

# Relax!
set -sg escape-time 0
set -sg repeat-time 600

# Less stretching to get to the first item.
set -g base-index 1
setw -g pane-base-index 1

set-option -g renumber-windows on

bind m command-prompt -p "move window to:"  "run-shell 'tmux.number.sh %%'"

# Clear screen
bind b send-keys -R \; clear-history

# Screen habits
bind C-a last-window
bind a send-keys C-a

# Reload the config.
bind r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf"

# Split windows
unbind %
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# Pane movement
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"


# Pane resizing
bind -r Left  resize-pane -L 2
bind -r Down  resize-pane -D 2
bind -r Up    resize-pane -U 2
bind -r Right resize-pane -R 2

# Window movement
bind -r , select-window -t :-
bind -r . select-window -t :+
bind ) swap-window -t +
bind ( swap-window -t -

# 256 colors please
#set -g default-terminal "xterm-256color"
set -g default-terminal "screen-256color"

# Activity
setw -g monitor-activity on
set -g visual-activity off

# Autorename sanely.
setw -g automatic-rename on

# Better name management
bind C new-window \; command-prompt "rename-window '%%'"
bind c new-window
bind , command-prompt "rename-window '%%'"

# zoom / maximize
unbind x
bind x run ". ~/.tmux/zoom"

# Copy mode
setw -g mode-keys vi
bind [ copy-mode
unbind p
bind p paste-buffer
bind -Tcopy-mode-vi v send -X begin-selection
bind -Tcopy-mode-vi y send -X copy-selection

# Mouse
#set-option -g mouse-select-pane on
#set-option -g mouse-resize-pane on
#set-option -g mouse-select-window on
#set-window-option -g mode-mouse off
# set -g mouse-utf8 on
set -g mouse on

# Status line - from https://github.com/zolrath/wemux/wiki/Status-Line
set -g status-left-length 32
set -g status-right-length 150

set -g status-fg white
set -g status-bg colour234
set -g pane-border-style 'fg=colour245'
set -g pane-active-border-style 'fg=colour39'
set -g message-style 'fg=colour16,bg=colour221'

set -g status-left '#[fg=colour235,bg=colour252,bold] #S #[fg=colour252,bg=colour234,nobold]'
set -g status-right "#[fg=colour16]#[fg=colour7,bg=colour16,bold] #(my_status) #[fg=colour23]#[fg=colour253,bg=colour23,bold] %a %m/%d %H:%M "

set -g window-status-format "#[fg=white,bg=colour234] #I #W "
set -g window-status-current-format "#[fg=colour234,bg=colour39]#[fg=colour25,bg=colour39,noreverse,bold] #I #W #[fg=colour39,bg=colour234,nobold]"

if-shell "uname | grep -q Darwin" "set-option -g default-command 'reattach-to-user-namespace -l zsh'"

if-shell "[ -e ~/.tmux_local ]" "source-file ~/.tmux_local"

set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @continuum-restore 'on'

run '~/.tmux/plugins/tpm/tpm'
